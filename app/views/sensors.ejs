<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BioMark - Управление датчиками</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        /* Header */
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 0;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: #667eea;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .logo:hover {
            color: #764ba2;
            text-decoration: none;
        }
        
        .nav-menu {
            display: flex;
            align-items: center;
            gap: 20px;
        }
        
        .nav-link {
            color: #6c757d;
            text-decoration: none;
            padding: 8px 16px;
            border-radius: 10px;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .nav-link:hover {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }
        
        .nav-link.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .nav-link.logout {
            background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
            color: white;
        }
        
        .nav-link.logout:hover {
            background: linear-gradient(135deg, #c82333 0%, #e55a00 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
        }
        
        /* Dropdown */
        .dropdown {
            z-index: 9999;
        }
        
        .dropdown-menu {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }
        
        .dropdown-item {
            color: #6c757d;
            transition: all 0.3s ease;
        }
        
        .dropdown-item:hover {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        /* Content */
        .content {
            padding: 40px 20px;
            min-height: calc(100vh - 80px);
        }
        
        .sensors-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            max-width: 1400px;
            margin: 0 auto;
        }
        
        /* Sensor Card */
        .sensor-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.3s ease;
            animation: slideUp 0.6s ease-out;
        }
        
        .sensor-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 30px 60px rgba(0, 0, 0, 0.15);
        }
        
        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .sensor-header {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        .sensor-icon {
            font-size: 3rem;
            margin-bottom: 10px;
        }
        
        .sensor-number {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 5px;
        }
        
        .sensor-status {
            font-size: 0.9rem;
            opacity: 0.9;
        }
        
        .sensor-body {
            padding: 25px;
        }
        
        .sensor-readings {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 25px;
        }
        
        .reading-item {
            text-align: center;
            padding: 15px;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 15px;
            border: 1px solid rgba(102, 126, 234, 0.2);
        }
        
        .reading-value {
            font-size: 1.8rem;
            font-weight: 700;
            color: #667eea;
            margin-bottom: 5px;
        }
        
        .reading-label {
            font-size: 0.8rem;
            color: #6c757d;
            font-weight: 500;
        }
        
        .sensor-info {
            margin-bottom: 25px;
        }
        
        .info-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }
        
        .info-item:last-child {
            border-bottom: none;
        }
        
        .info-label {
            color: #6c757d;
            font-weight: 500;
        }
        
        .info-value {
            color: #333;
            font-weight: 600;
        }
        
        .sensor-actions {
            display: flex;
            gap: 10px;
        }
        
        .btn-control {
            flex: 1;
            border: none;
            border-radius: 10px;
            padding: 12px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-align: center;
        }
        
        .btn-start {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }
        
        .btn-start:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(40, 167, 69, 0.3);
            color: white;
        }
        
        .btn-stop {
            background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
            color: white;
        }
        
        .btn-stop:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(220, 53, 69, 0.3);
            color: white;
        }
        
        .btn-config {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .btn-config:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
            color: white;
        }
        
        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: white;
        }
        
        .empty-state i {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.7;
        }
        
        .empty-state h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
        }
        
        .empty-state p {
            font-size: 1rem;
            opacity: 0.8;
        }
        
        /* Modal */
        .modal-content {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 20px 20px 0 0;
            border: none;
        }
        
        .modal-title {
            font-weight: 600;
        }
        
        .btn-close {
            filter: invert(1);
        }
        
        .modal-body {
            padding: 30px;
        }
        
        /* Form Styles */
        .form-floating {
            margin-bottom: 20px;
        }
        
        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 12px 15px;
            transition: all 0.3s ease;
        }
        
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 10px;
            padding: 12px 30px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .sensors-grid {
                grid-template-columns: 1fr;
            }
            
            .sensor-readings {
                grid-template-columns: 1fr;
            }
            
            .sensor-actions {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <a href="/main" class="logo">
                    <i class="fas fa-heartbeat"></i>
                    BioMark
                </a>
                
                <nav class="nav-menu">
                    <a href="/worker" class="nav-link">
                        <i class="fas fa-users me-1"></i>Работники
                    </a>
                    <a href="/card" class="nav-link">
                        <i class="fas fa-id-card me-1"></i>Пациенты
                    </a>
                    <a href="/sensors" class="nav-link active">
                        <i class="fas fa-microchip me-1"></i>Датчики
                    </a>
                    <a href="/logout" class="nav-link logout">
                        <i class="fas fa-sign-out-alt me-1"></i>Выйти
                    </a>
                </nav>
                
                <div class="dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        <i class="fas fa-cog me-1"></i>Действия
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#addSensorModal">
                                <i class="fas fa-plus me-2"></i>Добавить датчик
                            </button>
                        </li>
                        <li>
                            <button class="dropdown-item" onclick="refreshSensors()">
                                <i class="fas fa-sync-alt me-2"></i>Обновить данные
                            </button>
                        </li>
                        <li>
                            <button class="dropdown-item" onclick="exportSensorsData()">
                                <i class="fas fa-download me-2"></i>Экспорт данных
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </header>

    <!-- Content -->
    <main class="content">
        <div class="container">
            <div class="sensors-grid" id="sensorsContainer">
                <!-- Датчики будут загружены через Socket.io -->
                <div class="empty-state">
                    <i class="fas fa-microchip"></i>
                    <h3>Нет активных датчиков</h3>
                    <p>Добавьте датчик, чтобы начать мониторинг</p>
                </div>
            </div>
        </div>
    </main>

    <!-- Add Sensor Modal -->
    <div class="modal fade" id="addSensorModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-plus me-2"></i>Добавить датчик
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="addSensorForm">
                    <div class="modal-body">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="sensorId" name="sensorId" placeholder="ID датчика" required>
                            <label for="sensorId">
                                <i class="fas fa-hashtag me-2"></i>ID датчика
                            </label>
                        </div>
                        
                        <div class="form-floating">
                            <input type="text" class="form-control" id="sensorName" name="sensorName" placeholder="Название датчика">
                            <label for="sensorName">
                                <i class="fas fa-tag me-2"></i>Название датчика
                            </label>
                        </div>
                        
                        <div class="form-floating">
                            <select class="form-control" id="sensorType" name="sensorType" required>
                                <option value="">Выберите тип</option>
                                <option value="temperature">Температура</option>
                                <option value="pulse">Пульс</option>
                                <option value="combined">Комбинированный</option>
                            </select>
                            <label for="sensorType">
                                <i class="fas fa-cog me-2"></i>Тип датчика
                            </label>
                        </div>
                        
                        <div class="form-floating">
                            <textarea class="form-control" id="sensorDescription" name="sensorDescription" placeholder="Описание" style="height: 100px"></textarea>
                            <label for="sensorDescription">
                                <i class="fas fa-info-circle me-2"></i>Описание
                            </label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-1"></i>Отмена
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i>Добавить
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    
    <script>
        // Socket.io подключение
        const socket = io('/sensors');
        
        // Обработка данных датчиков
        socket.on('sensorsData', function (data) {
            updateSensorsDisplay(data.sensors);
        });
        
        // Функция обновления отображения датчиков
        function updateSensorsDisplay(sensors) {
            const container = document.getElementById('sensorsContainer');
            
            if (!sensors || sensors.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-microchip"></i>
                        <h3>Нет активных датчиков</h3>
                        <p>Добавьте датчик, чтобы начать мониторинг</p>
                    </div>
                `;
                return;
            }
            
            let sensorsHTML = '';
            
            sensors.forEach(sensor => {
                const isActive = sensor.timestamp && (new Date() - new Date(sensor.timestamp)) < 60000; // Активен если данные обновлялись менее минуты назад
                
                sensorsHTML += `
                    <div class="sensor-card">
                        <div class="sensor-header">
                            <div class="sensor-icon">
                                <i class="fas fa-thermometer-half"></i>
                            </div>
                            <div class="sensor-number">Датчик №${sensor.ids}</div>
                            <div class="sensor-status">${isActive ? 'Активен' : 'Неактивен'}</div>
                        </div>
                        <div class="sensor-body">
                            <div class="sensor-readings">
                                <div class="reading-item">
                                    <div class="reading-value">${sensor.temp1 || '--'}°C</div>
                                    <div class="reading-label">Температура</div>
                                </div>
                                <div class="reading-item">
                                    <div class="reading-value">${sensor.pulse || '--'}</div>
                                    <div class="reading-label">Пульс уд/мин</div>
                                </div>
                            </div>
                            
                            <div class="sensor-info">
                                <div class="info-item">
                                    <span class="info-label">ID датчика:</span>
                                    <span class="info-value">${sensor.ids}</span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Последнее обновление:</span>
                                    <span class="info-value">${sensor.timestamp ? new Date(sensor.timestamp).toLocaleString() : 'Нет данных'}</span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Статус:</span>
                                    <span class="info-value">${isActive ? '🟢 Активен' : '🔴 Неактивен'}</span>
                                </div>
                            </div>
                            
                            <div class="sensor-actions">
                                <button type="button" class="btn-control btn-config" onclick="configureSensor(${sensor.ids})">
                                    <i class="fas fa-cog"></i>
                                </button>
                                <button type="button" class="btn-control ${isActive ? 'btn-stop' : 'btn-start'}" onclick="toggleSensor(${sensor.ids}, ${isActive})">
                                    <i class="fas fa-${isActive ? 'stop' : 'play'}"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                `;
            });
            
            container.innerHTML = sensorsHTML;
        }
        
        // Функция настройки датчика
        function configureSensor(sensorId) {
            alert(`Настройка датчика №${sensorId} будет добавлена позже`);
        }
        
        // Функция включения/выключения датчика
        function toggleSensor(sensorId, isActive) {
            const action = isActive ? 'остановить' : 'запустить';
            if (confirm(`Вы уверены, что хотите ${action} датчик №${sensorId}?`)) {
                // Здесь будет логика управления датчиком
                alert(`Датчик №${sensorId} ${isActive ? 'остановлен' : 'запущен'}`);
            }
        }
        
        // Обработка формы добавления датчика
        document.getElementById('addSensorForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const sensorData = {
                sensorId: formData.get('sensorId'),
                name: formData.get('sensorName'),
                type: formData.get('sensorType'),
                description: formData.get('sensorDescription')
            };
            
            try {
                const response = await fetch('/add-sensor', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(sensorData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('Датчик успешно добавлен!');
                    // Закрываем модальное окно
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addSensorModal'));
                    modal.hide();
                    // Очищаем форму
                    this.reset();
                    // Обновляем данные
                    socket.emit('requestSensorsData');
                } else {
                    alert('Ошибка добавления датчика: ' + result.error);
                }
            } catch (error) {
                console.error('Ошибка добавления датчика:', error);
                alert('Ошибка добавления датчика');
            }
        });
        
        // Функция обновления данных датчиков
        function refreshSensors() {
            // Принудительно запрашиваем обновление данных
            socket.emit('requestSensorsData');
            alert('Данные датчиков обновлены');
        }
        
        // Функция экспорта данных датчиков
        function exportSensorsData() {
            // Здесь будет логика экспорта данных
            alert('Функция экспорта данных будет добавлена позже');
        }
    </script>
</body>
</html>
